@using MisteryBlazor.Pages.Room.Dialog
@using Placement = AntDesign.Placement
<link href="_content/AntDesign/css/ant-design-blazor.dark.css" rel="stylesheet" />

<div id="@Id" class="room-userbargroup ">
    <Dropdown Trigger="new Trigger[] { Trigger.ContextMenu }" Placement="Placement.BottomRight">
        <Overlay>
            <Menu>
                <MenuItem >修改名称</MenuItem>
                    <MenuItem>属性</MenuItem>
                    <MenuItem>创建邀请链接</MenuItem>
                    <MenuDivider/>
                    @if (IsOwned)
                    {
                        <MenuItem OnClick="() => { D_Para.IsDeleteDialogVisible = true;}">解散</MenuItem>
                        <MenuItem>转让</MenuItem>
                    }
                    else
                    {
                        <MenuItem>退出</MenuItem>
                    }
            </Menu>
        </Overlay>
        <ChildContent>
            <MudIconButton Style="height: 50px; width: 50px;" class="rounded-circle" Size="Size.Large" OnClick="OnClick.Invoke">
                <span class="room-userbargroup-avatar">
                    <MudAvatar Style="height: 50px; width: 50px;">@groupName[0]</MudAvatar>
                </span>
            </MudIconButton>
        </ChildContent>
    </Dropdown>
</div>

<DeleteGroup Visible="@D_Para.IsDeleteDialogVisible" HandleCancel="D_Para.HandleCancel" HandleOk="HandleDelete"/>

@code {
    class DialogPara
    {
        public bool IsDeleteDialogVisible { get; set; } = false;

        public void HandleCancel()
        {
            IsDeleteDialogVisible = false;
        }
    }

    DialogPara D_Para = new();
    [ParameterAttribute]
    public string groupName { get; set; }
    [ParameterAttribute]
    public int gid { get; set; }
    [ParameterAttribute]
    public string avatarName { get; set; } = String.Empty;
    [ParameterAttribute]
    public Action OnClick { get; set; }
    [ParameterAttribute] 
    public string Id { get; set; }
    [ParameterAttribute]
    public string avatarUri { get; set; }
    [ParameterAttribute]
    public EventCallback HandleDelete { get; set; }
    [ParameterAttribute]
    public bool IsOwned { get; set; }

    private void OnGroupClicked()
    {
        OnClick.Invoke();
    }
}