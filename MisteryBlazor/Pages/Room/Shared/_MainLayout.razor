@using MudBlazor.Utilities
@using System.Security.Claims
@using System.Text
@using MisteryBlazor.Data.GroupsModel
@using MisteryBlazor.Services
@using MisteryBlazor.Services.DAL
@using MisteryBlazor.Services.DataManager
@using MisteryBlazor.StringUtils
@inherits LayoutComponentBase
@inject GroupDataService gps;
@inject IJSRuntime js;
@inject GroupsManager Gm;
@inject AuthorizationManager Am;

<head>
    <link href="BlazorMaterialUI.styles.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
</head>

<MudDialogProvider/>
<MudSnackbarProvider/>
<MudThemeProvider DefaultScrollbar="false"
                  @bind-IsDarkMode="@_isDarkMode"
                  Theme="MisteryTheme"
                  />
<PageTitle>MisteryBlazor</PageTitle>
<div class="room-page-MainLayout">
    <div class="room-mainlayout-sidebar">
        <_RoomUserBar 
            OnGroupAdded="() => Gm.InitAsync()" 
            OnCurrectGroupChanged="gid => {Gm.SelectedGroupId=gid;}" 
            userId=@Am.UserId 
            groups="@Gm.Groups"
            comparedGroups="@Gm.GroupsDictionary"
            />
        @{
            StringBuilder UserId = new();
            UserId.Append("# ").Append(@Am.UserId);
            <_RoomSideBar group=@Gm.SelectedGroup UserName=@Am.UserName userId=@UserId.ToString()/>
        }
    </div>
    <main class="room-page-MainLayout-HeaderBar">
        <_RoomHeaderBar/>
        <_RoomChat/>
    </main>
</div>
@code {
    private _RoomUserBar UserBar;

    private bool _isDarkMode = true;
    protected override async Task OnInitializedAsync()
    {
        Gm.InitAsync();
        Am.InitAsync();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("init");
        }
    }
    readonly MudTheme MisteryTheme = new MudTheme()
    {
        Palette = new Palette()
        {

            Primary = Colors.Green.Default,
            Secondary = Colors.Green.Default,
            Tertiary = Colors.Green.Default,
            AppbarBackground = Colors.Green.Default,
        },

        PaletteDark = new Palette()
        {
            Dark = Colors.Shades.White,
            GrayDark = Colors.Shades.White,
            Secondary = Colors.Grey.Darken4, 
            Primary = (MudColor) "#262829",
            TextPrimary = Colors.Grey.Lighten4,
            Tertiary = (MudColor) "#2D2F33",
            Background = (MudColor) "#262829",
            LinesInputs = Colors.Grey.Lighten4,
            LinesDefault = Colors.Grey.Lighten3,
            TextSecondary = Colors.Grey.Darken1,
            TextDisabled = Colors.Grey.Default,
            ActionDefault= Colors.Grey.Default,
            ActionDisabled= "#ABABAB",
            PrimaryContrastText = Colors.Grey.Lighten3,
            BackgroundGrey = "#262829",
            Surface = "#2D2F33",
        },

        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "260px",
            DrawerWidthRight = "300px"
        }
    };
}